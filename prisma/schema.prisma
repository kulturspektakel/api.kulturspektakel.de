generator prisma_client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Viewer {
  id             String   @id @default(uuid())
  displayName    String
  email          String
  profilePicture String?
  slackToken     String
  slackScopes    String[]
  updatedAt      DateTime @default(now()) @updatedAt
}

model Area {
  id          String @id
  displayName String
  maxCapacity Int
  latitude    Float
  longitude   Float

  table           Table[]
  band            Band[]
  areaOpeningHour AreaOpeningHour[]
}

model AreaOpeningHour {
  id        Int      @id @default(autoincrement())
  area      Area     @relation(fields: [areaId], references: [id])
  startTime DateTime
  endTime   DateTime
  areaId    String
}

enum ReservationStatus {
  Pending
  Confirmed
  CheckedIn
  Cleared
}

model Reservation {
  id            Int               @id @default(autoincrement())
  token         String            @unique @default(uuid())
  primaryEmail  String
  primaryPerson String
  otherPersons  String[]
  startTime     DateTime
  endTime       DateTime
  createdAt     DateTime          @default(now())
  status        ReservationStatus @default(Pending)
  table         Table             @relation(fields: [tableId], references: [id])
  tableId       String

  @@unique([tableId, startTime])
}

model Table {
  id           String @id @default(uuid())
  areaId       String
  maxCapacity  Int
  minOccupancy Int
  displayName  String

  area Area @relation(fields: [areaId], references: [id])

  reservations Reservation[]
  @@unique([areaId, displayName])
}

model Band {
  id        Int      @id @default(autoincrement())
  name      String
  genre     String?
  startTime DateTime
  endTime   DateTime
  stage     Area     @relation(fields: [areaId], references: [id])
  areaId    String

  @@unique([areaId, startTime])
}

model ProductList {
  id      Int       @id @default(autoincrement())
  name    String
  emoji   String?
  product Product[]
}

model Product {
  id    Int    @id @default(autoincrement())
  name  String
  price Int
  order Int

  productList   ProductList @relation(fields: [productListId], references: [id])
  productListId Int

  @@unique([productListId, order])
}
